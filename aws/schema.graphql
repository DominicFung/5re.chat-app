schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  #5re.chat app
  getUser(masterSecret: String!, userId: ID!): _User!
  viewConvo(masterSecret: String!, convoId: ID!): _Convo!
  viewMessages(masterSecret: String!, convoId: ID!): [_Message]!

  # 5re.chat
  #  - sessionToken will have sealed the convoId
  getMessages(appId: String!, sessionToken: String!): [Message]!
}

type Mutation {
  # 5re.chat app
  createUser(masterSecret: String!, username: String!, avatarUrl: String!, githubId: String!): _User! @aws_iam
  # TODO: add App / remove App
  updateUserDiscordGuild(masterSecret: String!, appId: ID!, discordGuildId: String!): _User!
  refreshUserApiKey(masterSecret: String!, appId: ID!): String!
  addOwnerMessage(masterSecret: String!, discordChannelId: String!, message: String!): Message!

  # 5re.chat
  createSession(apiKey: String!): Convo!
  addCustomerMessage(appId: String!, sessionToken: String!, message: String!): String!
}

type Subscription {
  # 5re.chat app
  # convoCount(sessionToken: String!): Int! @aws_subscribe(mutations: ["createSession"])
  # messageCount(sessionToken: String!): Message! @aws_subscribe(mutations: ["addOwnerMessage"])

  # 5re.chat
  onMessage(appId: String!, sessionToken: String!): Message! @aws_subscribe(mutations: ["addOwnerMessage"])
}

enum UserType {
  OWNER
  CUSTOMER
}

type _User @aws_iam {
  userId: ID!

  githubId: String!
  username: String!
  avatarUrl: String!

  apps: [_App]!
}

type _App @aws_iam {
  appId: ID!
  appName: String!

  apiKey: String!
  unseal: String!

  discordGuildId: String!
  sessionTimeout: Int!
}

type Convo {
  messageToken: String! # use to decrypt messages for this session.
  sessionToken: String!
}

type _Convo @aws_iam {
  appId: ID!
  convoId: ID!
  apiKeyUsed: String!
  messageToken: String!
  sessionStartTime: String!

  discordChannelId: String!
  messages: [_Message]!
}

# unseal using apiKey
type Message {
  encrypted: String!
}

type _Message @aws_iam {
  sendDate: String!
  userType: UserType!
  message: String!
}