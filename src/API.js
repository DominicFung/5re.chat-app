"use strict";
/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserType = void 0;
var UserType;
(function (UserType) {
    UserType["OWNER"] = "OWNER";
    UserType["CUSTOMER"] = "CUSTOMER";
})(UserType = exports.UserType || (exports.UserType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQVBJLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQVBJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLG1FQUFtRTs7O0FBbURuRSxJQUFZLFFBR1g7QUFIRCxXQUFZLFFBQVE7SUFDbEIsMkJBQWUsQ0FBQTtJQUNmLGlDQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFIVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUduQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gIFRoaXMgZmlsZSB3YXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYW5kIHNob3VsZCBub3QgYmUgZWRpdGVkLlxuXG5leHBvcnQgdHlwZSBfVXNlciA9IHtcbiAgX190eXBlbmFtZTogXCJfVXNlclwiLFxuICB1c2VySWQ6IHN0cmluZyxcbiAgZ2l0aHViSWQ6IHN0cmluZyxcbiAgdXNlcm5hbWU6IHN0cmluZyxcbiAgYXZhdGFyVXJsOiBzdHJpbmcsXG4gIGFwcHM6ICBBcnJheTxfQXBwIHwgbnVsbCA+LFxufTtcblxuZXhwb3J0IHR5cGUgX0FwcCA9IHtcbiAgX190eXBlbmFtZTogXCJfQXBwXCIsXG4gIGFwcElkOiBzdHJpbmcsXG4gIGFwcE5hbWU6IHN0cmluZyxcbiAgYXBpS2V5OiBzdHJpbmcsXG4gIHVuc2VhbDogc3RyaW5nLFxuICBkaXNjb3JkR3VpbGRJZDogc3RyaW5nLFxuICBzZXNzaW9uVGltZW91dDogbnVtYmVyLFxufTtcblxuZXhwb3J0IHR5cGUgTWVzc2FnZSA9IHtcbiAgX190eXBlbmFtZTogXCJNZXNzYWdlXCIsXG4gIGVuY3J5cHRlZDogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgQ29udm8gPSB7XG4gIF9fdHlwZW5hbWU6IFwiQ29udm9cIixcbiAgbWVzc2FnZVRva2VuOiBzdHJpbmcsXG4gIC8vIHVzZSB0byBkZWNyeXB0IG1lc3NhZ2VzIGZvciB0aGlzIHNlc3Npb24uXG4gIHNlc3Npb25Ub2tlbjogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgX0NvbnZvID0ge1xuICBfX3R5cGVuYW1lOiBcIl9Db252b1wiLFxuICBhcHBJZDogc3RyaW5nLFxuICBjb252b0lkOiBzdHJpbmcsXG4gIGFwaUtleVVzZWQ6IHN0cmluZyxcbiAgbWVzc2FnZVRva2VuOiBzdHJpbmcsXG4gIHNlc3Npb25TdGFydFRpbWU6IHN0cmluZyxcbiAgZGlzY29yZENoYW5uZWxJZDogc3RyaW5nLFxuICBtZXNzYWdlczogIEFycmF5PF9NZXNzYWdlIHwgbnVsbCA+LFxufTtcblxuZXhwb3J0IHR5cGUgX01lc3NhZ2UgPSB7XG4gIF9fdHlwZW5hbWU6IFwiX01lc3NhZ2VcIixcbiAgc2VuZERhdGU6IHN0cmluZyxcbiAgdXNlclR5cGU6IFVzZXJUeXBlLFxuICBtZXNzYWdlOiBzdHJpbmcsXG59O1xuXG5leHBvcnQgZW51bSBVc2VyVHlwZSB7XG4gIE9XTkVSID0gXCJPV05FUlwiLFxuICBDVVNUT01FUiA9IFwiQ1VTVE9NRVJcIixcbn1cblxuXG5leHBvcnQgdHlwZSBDcmVhdGVVc2VyTXV0YXRpb25WYXJpYWJsZXMgPSB7XG4gIG1hc3RlclNlY3JldDogc3RyaW5nLFxuICB1c2VybmFtZTogc3RyaW5nLFxuICBhdmF0YXJVcmw6IHN0cmluZyxcbiAgZ2l0aHViSWQ6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVVzZXJNdXRhdGlvbiA9IHtcbiAgLy8gNXJlLmNoYXQgYXBwXG4gIGNyZWF0ZVVzZXI6ICB7XG4gICAgX190eXBlbmFtZTogXCJfVXNlclwiLFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIGdpdGh1YklkOiBzdHJpbmcsXG4gICAgdXNlcm5hbWU6IHN0cmluZyxcbiAgICBhdmF0YXJVcmw6IHN0cmluZyxcbiAgICBhcHBzOiAgQXJyYXk8IHtcbiAgICAgIF9fdHlwZW5hbWU6IFwiX0FwcFwiLFxuICAgICAgYXBwSWQ6IHN0cmluZyxcbiAgICAgIGFwcE5hbWU6IHN0cmluZyxcbiAgICAgIGFwaUtleTogc3RyaW5nLFxuICAgICAgdW5zZWFsOiBzdHJpbmcsXG4gICAgICBkaXNjb3JkR3VpbGRJZDogc3RyaW5nLFxuICAgICAgc2Vzc2lvblRpbWVvdXQ6IG51bWJlcixcbiAgICB9IHwgbnVsbCA+LFxuICB9LFxufTtcblxuZXhwb3J0IHR5cGUgVXBkYXRlVXNlckRpc2NvcmRHdWlsZE11dGF0aW9uVmFyaWFibGVzID0ge1xuICBtYXN0ZXJTZWNyZXQ6IHN0cmluZyxcbiAgYXBwSWQ6IHN0cmluZyxcbiAgZGlzY29yZEd1aWxkSWQ6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVVzZXJEaXNjb3JkR3VpbGRNdXRhdGlvbiA9IHtcbiAgLy8gVE9ETzogYWRkIEFwcCAvIHJlbW92ZSBBcHBcbiAgdXBkYXRlVXNlckRpc2NvcmRHdWlsZDogIHtcbiAgICBfX3R5cGVuYW1lOiBcIl9Vc2VyXCIsXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgZ2l0aHViSWQ6IHN0cmluZyxcbiAgICB1c2VybmFtZTogc3RyaW5nLFxuICAgIGF2YXRhclVybDogc3RyaW5nLFxuICAgIGFwcHM6ICBBcnJheTwge1xuICAgICAgX190eXBlbmFtZTogXCJfQXBwXCIsXG4gICAgICBhcHBJZDogc3RyaW5nLFxuICAgICAgYXBwTmFtZTogc3RyaW5nLFxuICAgICAgYXBpS2V5OiBzdHJpbmcsXG4gICAgICB1bnNlYWw6IHN0cmluZyxcbiAgICAgIGRpc2NvcmRHdWlsZElkOiBzdHJpbmcsXG4gICAgICBzZXNzaW9uVGltZW91dDogbnVtYmVyLFxuICAgIH0gfCBudWxsID4sXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBSZWZyZXNoVXNlckFwaUtleU11dGF0aW9uVmFyaWFibGVzID0ge1xuICBtYXN0ZXJTZWNyZXQ6IHN0cmluZyxcbiAgYXBwSWQ6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIFJlZnJlc2hVc2VyQXBpS2V5TXV0YXRpb24gPSB7XG4gIHJlZnJlc2hVc2VyQXBpS2V5OiBzdHJpbmcsXG59O1xuXG5leHBvcnQgdHlwZSBBZGRPd25lck1lc3NhZ2VNdXRhdGlvblZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIGRpc2NvcmRDaGFubmVsSWQ6IHN0cmluZyxcbiAgbWVzc2FnZTogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgQWRkT3duZXJNZXNzYWdlTXV0YXRpb24gPSB7XG4gIGFkZE93bmVyTWVzc2FnZTogIHtcbiAgICBfX3R5cGVuYW1lOiBcIk1lc3NhZ2VcIixcbiAgICBlbmNyeXB0ZWQ6IHN0cmluZyxcbiAgfSxcbn07XG5cbmV4cG9ydCB0eXBlIENyZWF0ZVNlc3Npb25NdXRhdGlvblZhcmlhYmxlcyA9IHtcbiAgYXBpS2V5OiBzdHJpbmcsXG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVTZXNzaW9uTXV0YXRpb24gPSB7XG4gIC8vIDVyZS5jaGF0XG4gIGNyZWF0ZVNlc3Npb246ICB7XG4gICAgX190eXBlbmFtZTogXCJDb252b1wiLFxuICAgIG1lc3NhZ2VUb2tlbjogc3RyaW5nLFxuICAgIC8vIHVzZSB0byBkZWNyeXB0IG1lc3NhZ2VzIGZvciB0aGlzIHNlc3Npb24uXG4gICAgc2Vzc2lvblRva2VuOiBzdHJpbmcsXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBBZGRDdXN0b21lck1lc3NhZ2VNdXRhdGlvblZhcmlhYmxlcyA9IHtcbiAgYXBwSWQ6IHN0cmluZyxcbiAgc2Vzc2lvblRva2VuOiBzdHJpbmcsXG4gIG1lc3NhZ2U6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIEFkZEN1c3RvbWVyTWVzc2FnZU11dGF0aW9uID0ge1xuICBhZGRDdXN0b21lck1lc3NhZ2U6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIEdldFVzZXJRdWVyeVZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIHVzZXJJZDogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgR2V0VXNlclF1ZXJ5ID0ge1xuICAvLyA1cmUuY2hhdCBhcHBcbiAgZ2V0VXNlcjogIHtcbiAgICBfX3R5cGVuYW1lOiBcIl9Vc2VyXCIsXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgZ2l0aHViSWQ6IHN0cmluZyxcbiAgICB1c2VybmFtZTogc3RyaW5nLFxuICAgIGF2YXRhclVybDogc3RyaW5nLFxuICAgIGFwcHM6ICBBcnJheTwge1xuICAgICAgX190eXBlbmFtZTogXCJfQXBwXCIsXG4gICAgICBhcHBJZDogc3RyaW5nLFxuICAgICAgYXBwTmFtZTogc3RyaW5nLFxuICAgICAgYXBpS2V5OiBzdHJpbmcsXG4gICAgICB1bnNlYWw6IHN0cmluZyxcbiAgICAgIGRpc2NvcmRHdWlsZElkOiBzdHJpbmcsXG4gICAgICBzZXNzaW9uVGltZW91dDogbnVtYmVyLFxuICAgIH0gfCBudWxsID4sXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBWaWV3Q29udm9RdWVyeVZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIGNvbnZvSWQ6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIFZpZXdDb252b1F1ZXJ5ID0ge1xuICB2aWV3Q29udm86ICB7XG4gICAgX190eXBlbmFtZTogXCJfQ29udm9cIixcbiAgICBhcHBJZDogc3RyaW5nLFxuICAgIGNvbnZvSWQ6IHN0cmluZyxcbiAgICBhcGlLZXlVc2VkOiBzdHJpbmcsXG4gICAgbWVzc2FnZVRva2VuOiBzdHJpbmcsXG4gICAgc2Vzc2lvblN0YXJ0VGltZTogc3RyaW5nLFxuICAgIGRpc2NvcmRDaGFubmVsSWQ6IHN0cmluZyxcbiAgICBtZXNzYWdlczogIEFycmF5PCB7XG4gICAgICBfX3R5cGVuYW1lOiBcIl9NZXNzYWdlXCIsXG4gICAgICBzZW5kRGF0ZTogc3RyaW5nLFxuICAgICAgdXNlclR5cGU6IFVzZXJUeXBlLFxuICAgICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIH0gfCBudWxsID4sXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBWaWV3TWVzc2FnZXNRdWVyeVZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIGNvbnZvSWQ6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIFZpZXdNZXNzYWdlc1F1ZXJ5ID0ge1xuICB2aWV3TWVzc2FnZXM6ICBBcnJheTwge1xuICAgIF9fdHlwZW5hbWU6IFwiX01lc3NhZ2VcIixcbiAgICBzZW5kRGF0ZTogc3RyaW5nLFxuICAgIHVzZXJUeXBlOiBVc2VyVHlwZSxcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gIH0gfCBudWxsID4sXG59O1xuXG5leHBvcnQgdHlwZSBHZXRNZXNzYWdlc1F1ZXJ5VmFyaWFibGVzID0ge1xuICBhcHBJZDogc3RyaW5nLFxuICBzZXNzaW9uVG9rZW46IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIEdldE1lc3NhZ2VzUXVlcnkgPSB7XG4gIC8vIDVyZS5jaGF0XG4gIC8vIC0gc2Vzc2lvblRva2VuIHdpbGwgaGF2ZSBzZWFsZWQgdGhlIGNvbnZvSWRcbiAgZ2V0TWVzc2FnZXM6ICBBcnJheTwge1xuICAgIF9fdHlwZW5hbWU6IFwiTWVzc2FnZVwiLFxuICAgIGVuY3J5cHRlZDogc3RyaW5nLFxuICB9IHwgbnVsbCA+LFxufTtcblxuZXhwb3J0IHR5cGUgT25NZXNzYWdlU3Vic2NyaXB0aW9uVmFyaWFibGVzID0ge1xuICBhcHBJZDogc3RyaW5nLFxuICBzZXNzaW9uVG9rZW46IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIE9uTWVzc2FnZVN1YnNjcmlwdGlvbiA9IHtcbiAgLy8gNXJlLmNoYXQgYXBwXG4gIC8vIGNvbnZvQ291bnQoc2Vzc2lvblRva2VuOiBTdHJpbmchKTogSW50ISBAYXdzX3N1YnNjcmliZShtdXRhdGlvbnM6IFtcImNyZWF0ZVNlc3Npb25cIl0pXG4gIC8vIG1lc3NhZ2VDb3VudChzZXNzaW9uVG9rZW46IFN0cmluZyEpOiBNZXNzYWdlISBAYXdzX3N1YnNjcmliZShtdXRhdGlvbnM6IFtcImFkZE93bmVyTWVzc2FnZVwiXSlcbiAgLy8gNXJlLmNoYXRcbiAgb25NZXNzYWdlOiAge1xuICAgIF9fdHlwZW5hbWU6IFwiTWVzc2FnZVwiLFxuICAgIGVuY3J5cHRlZDogc3RyaW5nLFxuICB9LFxufTtcbiJdfQ==