"use strict";
/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserType = void 0;
var UserType;
(function (UserType) {
    UserType["OWNER"] = "OWNER";
    UserType["CUSTOMER"] = "CUSTOMER";
})(UserType = exports.UserType || (exports.UserType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQVBJLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQVBJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLG1FQUFtRTs7O0FBc0RuRSxJQUFZLFFBR1g7QUFIRCxXQUFZLFFBQVE7SUFDbEIsMkJBQWUsQ0FBQTtJQUNmLGlDQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFIVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUduQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gIFRoaXMgZmlsZSB3YXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYW5kIHNob3VsZCBub3QgYmUgZWRpdGVkLlxuXG5leHBvcnQgdHlwZSBfVXNlciA9IHtcbiAgX190eXBlbmFtZTogXCJfVXNlclwiLFxuICB1c2VySWQ6IHN0cmluZyxcbiAgZ2l0aHViSWQ6IHN0cmluZyxcbiAgdXNlcm5hbWU6IHN0cmluZyxcbiAgYXZhdGFyVXJsOiBzdHJpbmcsXG4gIGFwcHM6ICBBcnJheTxfQXBwIHwgbnVsbCA+LFxufTtcblxuZXhwb3J0IHR5cGUgX0FwcCA9IHtcbiAgX190eXBlbmFtZTogXCJfQXBwXCIsXG4gIGFwcElkOiBzdHJpbmcsXG4gIHVzZXJJZDogc3RyaW5nLFxuICBhcHBOYW1lOiBzdHJpbmcsXG4gIGFwaUtleTogc3RyaW5nLFxuICB1bnNlYWw6IHN0cmluZyxcbiAgZGlzY29yZEd1aWxkSWQ6IHN0cmluZyxcbiAgc2Vzc2lvblRpbWVvdXQ6IG51bWJlcixcbiAgYWN0aXZlOiBib29sZWFuXG59O1xuXG5leHBvcnQgdHlwZSBNZXNzYWdlID0ge1xuICBfX3R5cGVuYW1lOiBcIk1lc3NhZ2VcIixcbiAgZW5jcnlwdGVkOiBzdHJpbmcsXG59O1xuXG5leHBvcnQgdHlwZSBDb252byA9IHtcbiAgX190eXBlbmFtZTogXCJDb252b1wiLFxuICBtZXNzYWdlVG9rZW46IHN0cmluZyxcbiAgLy8gdXNlIHRvIGVuY3J5cHQgLyBkZWNyeXB0IG1lc3NhZ2VzLlxuICBzZXNzaW9uVG9rZW46IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIF9Db252byA9IHtcbiAgX190eXBlbmFtZTogXCJfQ29udm9cIixcbiAgYXBwSWQ6IHN0cmluZyxcbiAgY29udm9JZDogc3RyaW5nLFxuICBhcGlLZXlVc2VkOiBzdHJpbmcsXG4gIGRpc2NvcmRHdWlsZElkOiBzdHJpbmcsXG4gIG1lc3NhZ2VUb2tlbjogc3RyaW5nLFxuICBzZXNzaW9uU3RhcnRUaW1lOiBzdHJpbmcsXG4gIGRpc2NvcmRDaGFubmVsSWQ6IHN0cmluZyxcbiAgbWVzc2FnZXM6ICBBcnJheTxfTWVzc2FnZSB8IG51bGwgPixcbn07XG5cbmV4cG9ydCB0eXBlIF9NZXNzYWdlID0ge1xuICBfX3R5cGVuYW1lOiBcIl9NZXNzYWdlXCIsXG4gIHNlbmREYXRlOiBzdHJpbmcsXG4gIHVzZXJUeXBlOiBVc2VyVHlwZSxcbiAgbWVzc2FnZTogc3RyaW5nLFxufTtcblxuZXhwb3J0IGVudW0gVXNlclR5cGUge1xuICBPV05FUiA9IFwiT1dORVJcIixcbiAgQ1VTVE9NRVIgPSBcIkNVU1RPTUVSXCIsXG59XG5cblxuZXhwb3J0IHR5cGUgQ3JlYXRlVXNlck11dGF0aW9uVmFyaWFibGVzID0ge1xuICBtYXN0ZXJTZWNyZXQ6IHN0cmluZyxcbiAgdXNlcm5hbWU6IHN0cmluZyxcbiAgYXZhdGFyVXJsOiBzdHJpbmcsXG4gIGdpdGh1YklkOiBzdHJpbmcsXG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVVc2VyTXV0YXRpb24gPSB7XG4gIC8vIDVyZS5jaGF0IGFwcFxuICBjcmVhdGVVc2VyOiAge1xuICAgIF9fdHlwZW5hbWU6IFwiX1VzZXJcIixcbiAgICB1c2VySWQ6IHN0cmluZyxcbiAgICBnaXRodWJJZDogc3RyaW5nLFxuICAgIHVzZXJuYW1lOiBzdHJpbmcsXG4gICAgYXZhdGFyVXJsOiBzdHJpbmcsXG4gICAgYXBwczogIEFycmF5PCB7XG4gICAgICBfX3R5cGVuYW1lOiBcIl9BcHBcIixcbiAgICAgIGFwcElkOiBzdHJpbmcsXG4gICAgICBhcHBOYW1lOiBzdHJpbmcsXG4gICAgICBhcGlLZXk6IHN0cmluZyxcbiAgICAgIHVuc2VhbDogc3RyaW5nLFxuICAgICAgZGlzY29yZEd1aWxkSWQ6IHN0cmluZyxcbiAgICAgIHNlc3Npb25UaW1lb3V0OiBudW1iZXIsXG4gICAgfSB8IG51bGwgPixcbiAgfSxcbn07XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZVVzZXJEaXNjb3JkR3VpbGRNdXRhdGlvblZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIGFwcElkOiBzdHJpbmcsXG4gIGRpc2NvcmRHdWlsZElkOiBzdHJpbmcsXG59O1xuXG5leHBvcnQgdHlwZSBVcGRhdGVVc2VyRGlzY29yZEd1aWxkTXV0YXRpb24gPSB7XG4gIC8vIFRPRE86IGFkZCBBcHAgLyByZW1vdmUgQXBwXG4gIHVwZGF0ZVVzZXJEaXNjb3JkR3VpbGQ6ICB7XG4gICAgX190eXBlbmFtZTogXCJfVXNlclwiLFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIGdpdGh1YklkOiBzdHJpbmcsXG4gICAgdXNlcm5hbWU6IHN0cmluZyxcbiAgICBhdmF0YXJVcmw6IHN0cmluZyxcbiAgICBhcHBzOiAgQXJyYXk8IHtcbiAgICAgIF9fdHlwZW5hbWU6IFwiX0FwcFwiLFxuICAgICAgYXBwSWQ6IHN0cmluZyxcbiAgICAgIGFwcE5hbWU6IHN0cmluZyxcbiAgICAgIGFwaUtleTogc3RyaW5nLFxuICAgICAgdW5zZWFsOiBzdHJpbmcsXG4gICAgICBkaXNjb3JkR3VpbGRJZDogc3RyaW5nLFxuICAgICAgc2Vzc2lvblRpbWVvdXQ6IG51bWJlcixcbiAgICB9IHwgbnVsbCA+LFxuICB9LFxufTtcblxuZXhwb3J0IHR5cGUgUmVmcmVzaFVzZXJBcGlLZXlNdXRhdGlvblZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIGFwcElkOiBzdHJpbmcsXG59O1xuXG5leHBvcnQgdHlwZSBSZWZyZXNoVXNlckFwaUtleU11dGF0aW9uID0ge1xuICByZWZyZXNoVXNlckFwaUtleTogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgQWRkT3duZXJNZXNzYWdlTXV0YXRpb25WYXJpYWJsZXMgPSB7XG4gIG1hc3RlclNlY3JldDogc3RyaW5nLFxuICBkaXNjb3JkQ2hhbm5lbElkOiBzdHJpbmcsXG4gIG1lc3NhZ2U6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIEFkZE93bmVyTWVzc2FnZU11dGF0aW9uID0ge1xuICBhZGRPd25lck1lc3NhZ2U6ICB7XG4gICAgX190eXBlbmFtZTogXCJNZXNzYWdlXCIsXG4gICAgZW5jcnlwdGVkOiBzdHJpbmcsXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBDcmVhdGVTZXNzaW9uTXV0YXRpb25WYXJpYWJsZXMgPSB7XG4gIGFwaUtleTogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgQ3JlYXRlU2Vzc2lvbk11dGF0aW9uID0ge1xuICAvLyA1cmUuY2hhdFxuICBjcmVhdGVTZXNzaW9uOiAge1xuICAgIF9fdHlwZW5hbWU6IFwiQ29udm9cIixcbiAgICBtZXNzYWdlVG9rZW46IHN0cmluZyxcbiAgICAvLyB1c2UgdG8gZW5jcnlwdCAvIGRlY3J5cHQgbWVzc2FnZXMuXG4gICAgc2Vzc2lvblRva2VuOiBzdHJpbmcsXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBBZGRDdXN0b21lck1lc3NhZ2VNdXRhdGlvblZhcmlhYmxlcyA9IHtcbiAgc2Vzc2lvblRva2VuOiBzdHJpbmcsXG4gIG1lc3NhZ2U6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIEFkZEN1c3RvbWVyTWVzc2FnZU11dGF0aW9uID0ge1xuICBhZGRDdXN0b21lck1lc3NhZ2U6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIEdldFVzZXJRdWVyeVZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIHVzZXJJZDogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgR2V0VXNlclF1ZXJ5ID0ge1xuICAvLyA1cmUuY2hhdCBhcHBcbiAgZ2V0VXNlcjogIHtcbiAgICBfX3R5cGVuYW1lOiBcIl9Vc2VyXCIsXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgZ2l0aHViSWQ6IHN0cmluZyxcbiAgICB1c2VybmFtZTogc3RyaW5nLFxuICAgIGF2YXRhclVybDogc3RyaW5nLFxuICAgIGFwcHM6ICBBcnJheTwge1xuICAgICAgX190eXBlbmFtZTogXCJfQXBwXCIsXG4gICAgICBhcHBJZDogc3RyaW5nLFxuICAgICAgYXBwTmFtZTogc3RyaW5nLFxuICAgICAgYXBpS2V5OiBzdHJpbmcsXG4gICAgICB1bnNlYWw6IHN0cmluZyxcbiAgICAgIGRpc2NvcmRHdWlsZElkOiBzdHJpbmcsXG4gICAgICBzZXNzaW9uVGltZW91dDogbnVtYmVyLFxuICAgIH0gfCBudWxsID4sXG4gIH0sXG59O1xuXG5leHBvcnQgdHlwZSBWaWV3Q29udm9RdWVyeVZhcmlhYmxlcyA9IHtcbiAgbWFzdGVyU2VjcmV0OiBzdHJpbmcsXG4gIGNvbnZvSWQ6IHN0cmluZyxcbn07XG5cbmV4cG9ydCB0eXBlIFZpZXdDb252b1F1ZXJ5ID0ge1xuICB2aWV3Q29udm86ICB7XG4gICAgX190eXBlbmFtZTogXCJfQ29udm9cIixcbiAgICBhcHBJZDogc3RyaW5nLFxuICAgIGNvbnZvSWQ6IHN0cmluZyxcbiAgICBhcGlLZXlVc2VkOiBzdHJpbmcsXG4gICAgZGlzY29yZEd1aWxkSWQ6IHN0cmluZyxcbiAgICBtZXNzYWdlVG9rZW46IHN0cmluZyxcbiAgICBzZXNzaW9uU3RhcnRUaW1lOiBzdHJpbmcsXG4gICAgZGlzY29yZENoYW5uZWxJZDogc3RyaW5nLFxuICAgIG1lc3NhZ2VzOiAgQXJyYXk8IHtcbiAgICAgIF9fdHlwZW5hbWU6IFwiX01lc3NhZ2VcIixcbiAgICAgIHNlbmREYXRlOiBzdHJpbmcsXG4gICAgICB1c2VyVHlwZTogVXNlclR5cGUsXG4gICAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgfSB8IG51bGwgPixcbiAgfSxcbn07XG5cbmV4cG9ydCB0eXBlIFZpZXdNZXNzYWdlc1F1ZXJ5VmFyaWFibGVzID0ge1xuICBtYXN0ZXJTZWNyZXQ6IHN0cmluZyxcbiAgY29udm9JZDogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgVmlld01lc3NhZ2VzUXVlcnkgPSB7XG4gIHZpZXdNZXNzYWdlczogIEFycmF5PCB7XG4gICAgX190eXBlbmFtZTogXCJfTWVzc2FnZVwiLFxuICAgIHNlbmREYXRlOiBzdHJpbmcsXG4gICAgdXNlclR5cGU6IFVzZXJUeXBlLFxuICAgIG1lc3NhZ2U6IHN0cmluZyxcbiAgfSB8IG51bGwgPixcbn07XG5cbmV4cG9ydCB0eXBlIEdldE1lc3NhZ2VzUXVlcnlWYXJpYWJsZXMgPSB7XG4gIHNlc3Npb25Ub2tlbjogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgR2V0TWVzc2FnZXNRdWVyeSA9IHtcbiAgLy8gNXJlLmNoYXRcbiAgLy8gLSBzZXNzaW9uVG9rZW4gd2lsbCBoYXZlIHNlYWxlZCB0aGUgY29udm9JZFxuICBnZXRNZXNzYWdlczogIEFycmF5PCB7XG4gICAgX190eXBlbmFtZTogXCJNZXNzYWdlXCIsXG4gICAgZW5jcnlwdGVkOiBzdHJpbmcsXG4gIH0gfCBudWxsID4sXG59O1xuXG5leHBvcnQgdHlwZSBPbk1lc3NhZ2VTdWJzY3JpcHRpb25WYXJpYWJsZXMgPSB7XG4gIHNlc3Npb25Ub2tlbjogc3RyaW5nLFxufTtcblxuZXhwb3J0IHR5cGUgT25NZXNzYWdlU3Vic2NyaXB0aW9uID0ge1xuICAvLyA1cmUuY2hhdCBhcHBcbiAgLy8gY29udm9Db3VudChzZXNzaW9uVG9rZW46IFN0cmluZyEpOiBJbnQhIEBhd3Nfc3Vic2NyaWJlKG11dGF0aW9uczogW1wiY3JlYXRlU2Vzc2lvblwiXSlcbiAgLy8gbWVzc2FnZUNvdW50KHNlc3Npb25Ub2tlbjogU3RyaW5nISk6IE1lc3NhZ2UhIEBhd3Nfc3Vic2NyaWJlKG11dGF0aW9uczogW1wiYWRkT3duZXJNZXNzYWdlXCJdKVxuICAvLyA1cmUuY2hhdFxuICBvbk1lc3NhZ2U6ICB7XG4gICAgX190eXBlbmFtZTogXCJNZXNzYWdlXCIsXG4gICAgZW5jcnlwdGVkOiBzdHJpbmcsXG4gIH0sXG59O1xuIl19